<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="widget.xsl"?>
<!-- - - - component - - - -->
<widget class="component" title="Component">
	<p>Component is an abstract superclass for most Thinlet widgets. All components support the parameters listed below.</p>
	<parameters>
		<parameter name="name" type="string">
			 Identifies the component.
		</parameter>
		<parameter name="enabled" type="boolean" default="true">
			Enables or disables this component. A disabled component is painted gray,
			and can't respond to user mouse or keyboard input, gain the keyboard focus,
			and generate events.
		</parameter>
		<parameter name="visible" type="boolean" default="true">
			An invisible component doesn't take place in parent's layout.
		</parameter>
		<parameter name="tooltip" type="string">
			The text pops up when the mouse lingers inside the component.
		</parameter>
		<parameter name="font" type="font" default="">
			Custom font for texts. The format of this parameter is: font="[NAME] [SIZE] [italic] [bold]", where NAME is the font name, and SIZE is integer font size in points. At least one font parameter must be present.
		</parameter>
		<parameter name="foreground" type="color" default="">
			Custom foreground (text) color to use, instead of the
			default text color set with setColors(). The format of
			this parameter is: foreground="#RRGGBB", with RGB
			values in hexadecimal.
		</parameter>
		<parameter name="background" type="color" default="">
			Custom background color to use, instead of the
			default background color set with setColors().
			Parameter format is the same as for foreground.
			NOTE: for components with gradients (buttons, menubars,
			etc...) this means that the background will be
			filled with SOLID color, and not a custom gradient.
		</parameter>
		<parameter name="width" type="integer" default="0">
			Fixed preferred width of the component irrespectively of its content.
			If it is 0, the component will be asked for the preferred width.
		</parameter>
		<parameter name="height" type="integer" default="0">
			Preferred height of the component, or 0.
		</parameter>
		<parameter name="colspan" type="integer" default="1">
			Specifies the number of cells in a column in the component's display area.
		</parameter>
		<parameter name="rowspan" type="integer" default="1">
			Specifies the number of cells in a row occupied by the component.
		</parameter>
		<parameter name="weightx" type="integer" default="0">
			Used to determine how to distribute horizontal space among grid cells
			when more space is available for its parent component than required.
		</parameter>
		<parameter name="weighty" type="integer" default="0">
			The extra vertical space is distributed to each cell height in proportion
			to its weight. Default value is 0. The row contains 0 weighted components
			remains the calculated preferred size.
		</parameter>
		<parameter name="halign" type="choice" default="fill">
			Horizontal alignment of the component when more space available
			in the cell. Possible values are: fill, center, left, and right.
		</parameter>
		<parameter name="valign" type="choice" default="fill">
			Vertical alignment in the cell.
			Possible values are: fill, center, top, and bottom.
		</parameter>
		<parameter name="i18n" type="boolean" default="false">
			Enables or disables lookup of internationalized version
			of texts for "text" and "tooltip" parameters. See methods "setLangResource()" and "setAllI18n()" in Thinlet API.
		</parameter>
		<parameter name="property" type="property">
			Binds an arbitrary key/value client property. The format of its value
			is key=value, both are strings and stored in a hashtable of the component.
			Use format property="key1=value1;key2=value2" for multiple properties.
		</parameter>
		<parameter name="init" type="method">
			A method to invoke when the loading of this component
			is finished.
		</parameter>
		<parameter name="focuslost" type="method">
			[Pending]
		</parameter>
		<parameter name="focusgained" type="method">
			[Pending]
		</parameter>
	</parameters>
	<!-- - - - popupmenu - - - -->
	<widget class="popupmenu" title="PopupMenu">
		<p>Popup menus resemble in functionality normal menus, and can be added to most container components. Popupmenu component can have the same sub-components as menubar. Popup menus are invoked with mouse right-click.</p>
		<parameters>
			<parameter name="menushown" type="method">
				[Pending]
			</parameter>
			<parameter extend="component">
				[Pending]
			</parameter>
		</parameters>
	</widget>
</widget>
